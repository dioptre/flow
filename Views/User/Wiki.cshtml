@model EXPEDIT.Flow.ViewModels.WikiViewModel
@Html.Partial("Header")
@{
    Style.Require("Flow");
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    Layout.Title = T("Edit Wiki").ToString();
    Style.Require("jQueryColorbox").AtFoot();
}
@using (Html.BeginForm("Wiki", "User", new { area = "EXPEDIT.Flow" }, FormMethod.Post, new { id = "form1", @class = "form" }))
{
    <article class="content-item page">
    <header><h1>@Layout.Title</h1></header>
    <fieldset>    
    @*<legend></legend>*@
     @Html.AntiForgeryToken()
     <div class="editor-label">
       @(Model.IsNew && !string.IsNullOrWhiteSpace(Model.GraphName) ? Html.Raw("<h4>There is no content for this page. Please add some.</h4>") : Html.Raw(""))
       @Html.LabelFor(m => m.GraphName, new { style = "font-weight:bold;"})
    </div>
    <div class="editor-field">
       @( Model.IsNew ? Html.TextBoxFor(m => m.GraphName) : Html.TextBoxFor(m => m.GraphName, new { @readonly = "readonly" })) <img id="checkDupWiki" src="@Url.Content("~/Modules/EXPEDIT.Flow/Images/loading.gif")" style="margin-top:-10px;display:none;" />
    </div>       
    <div class="editor-label">
        <p>Description:</p>
    </div>
    <div class="editor-field">
    @Html.TextAreaFor(m => m.GraphData, 12, 80,
     new Dictionary<string, object> {
		{"class", "html tinymce"},	
        {"style", "width:100%"}
	 })<br />
    </div>   
   
    <input type="submit" value="Submit" />
    @Html.HiddenFor(m => m.GraphDataID)

    </fieldset>
    </article>

}

    <script src="@Url.Content("~/Modules/TinyMce/Scripts/tiny_mce_src.js")"></script>
    <script src="@Url.Content("~/Modules/Orchard.jQuery/Scripts/jquery.colorbox.js")"></script>
    <script type="text/javascript">
        var duplicate = @(Model.IsDuplicate ? "true" : "false");
        $("#GraphName").keyup(function () {            
            $.ajax({
                async: true,
                type: 'GET',
                url: '@Url.Content("~/Flow/NodeDuplicate")/' + encodeURIComponent($("#GraphName").val()),
                success: function (data) {
                    duplicate = data;
                },
                beforeSend: function() {
                    $("#checkDupWiki").show();
                },
                complete: function() {
                    $("#checkDupWiki").hide();
                    $("#form1").valid();
                }

                });
        });
        
        
        jQuery.validator.addMethod("noduplicate", function (value, element) {   
                return !duplicate;
            }, "Please choose an alternative name. This one is taken.");


        $("#form1").validate({
                rules: {
                    "GraphName": {
                        required: true,
                        maxlength: 50,
                        noduplicate: true
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                }
            });
        
        $("#form1").valid();


        tinyMCE.init({
            theme: "advanced",
            schema: "html5",
            mode: "specific_textareas",
            editor_selector: "tinymce",
            plugins: "fullscreen,autoresize,searchreplace,filepicker,inlinepopups",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_buttons1: "search,replace,|,cut,copy,paste,|,undo,redo,|,link,unlink,charmap,emoticon,codeblock,|,filepicker,|,bold,italic,|,numlist,bullist,formatselect,|,code,fullscreen",
            theme_advanced_buttons2: "",
            theme_advanced_buttons3: "",
            convert_urls: false,
            valid_elements: "*[*]",
            // shouldn't be needed due to the valid_elements setting, but TinyMCE would strip script.src without it.
            extended_valid_elements: "script[type|defer|src|language]"
        });
 
    </script>


