@Html.Partial("Header")
@{
    Style.Require("Flow");
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    Layout.Title = T("Flow Search").ToString();
}
<script src="~/Modules/EXPEDIT.Flow/Scripts/flow.js"></script>
<script src="~/Modules/EXPEDIT.Flow/Scripts/vis.js"></script>
<link type="text/css" rel="stylesheet" href="~/Modules/EXPEDIT.Flow/Styles/vis.css">
<link type="text/css" rel="stylesheet" href="~/Modules/EXPEDIT.Flow/Styles/flow.css">


<script type="text/x-handlebars" id="">
    
    header
    {{outlet}}
    footer
  </script>

  <script type="text/x-handlebars" id="graph">

    GRAPH
    <div id="graph-popUp">
    <span id="operation">node</span> <br>
    <table style="margin:auto;"><tr>
      <td>id</td><td><input id="node-id" value="new value"></td>
    </tr>
      <tr>
        <td>label</td><td><input id="node-label" value="new value"> </td>
      </tr></table>
    <input type="button" value="save" id="saveButton"></button>
    <input type="button" value="cancel" id="cancelButton"></button>
  </div>
  <br />
  <div id="mygraph"></div>

  </script>

    Goto <input type="text" id="location" />
    <div id="map-search" style="width: 100%; height: 70vh; display:none;"></div>



<script type="text/javascript">
    var drawing = false;
    var smap;
    var cmap;
    function initialize() {
        if (drawing)
            smap = SetupDrawingMap('map-search');
        else
            smap = SetupMap('map-search');
        RedrawMap(smap);
        
    }
   
    $(document).ready(function () {
        if (!drawing)
            LoadScript('https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&callback=initialize');
        else
            LoadScript('http://maps.googleapis.com/maps/api/js?libraries=drawing&sensor=true&callback=initialize');
        LoadScript('@Url.Content("~/Modules/NKD/Scripts/NKD.maps.js")');
    });

    function OnMapUpdate(map, event, center, viewport) {
        cmap = map;
        if (event.eventType == "EDITED") {
            if (event.eventSource.type == "marker") {
                DeleteExceptedShape(map, event.eventSource)
            }
            else {
                DeleteExceptedShapeTypes(map);
            }
        }
    }

    var x;

    $("#location").autocomplete({
        delay: 100,
        source: function (request, response) {
            $.ajax({
                url: "/share/getlocations/" + request.term,
                type: "GET",
                dataType: "json",
                //data: { id: request.term },
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.Text, value: item.Text, id: item.Value
                        }
                    }))
                }
            })
        },
        focus: function (event, ui) {
            AddGeographyUnique(smap, JSON.parse(ui.item.id).spatial, false, ui.item.label, true, NewGUID());
            RefocusMap(smap);
            smap.setZoom(9);
        },
        response: function (event, ui) {
            if (ui.content.length > 0) {
                AddGeographyUnique(smap, JSON.parse(ui.content[0].id).spatial, false, ui.content[0].label, true, NewGUID());
                RefocusMap(smap);
                smap.setZoom(9);
            }
            else {
                GetAddressLocation($("#location").val(), function (latlng) {
                    DeleteShapes(smap);
                    AddMarkerSingle(smap, latlng, false, $("#location").val(), NewGUID());
                    RefocusMap(smap);
                    smap.setZoom(15);
                });
            }

        }
    });

</script>